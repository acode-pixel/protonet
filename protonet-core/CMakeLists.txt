cmake_minimum_required(VERSION 3.25.1)
project("proto" C)
enable_testing()

if(MINGW)
    message( STATUS "Installing system-libraries: MinGW DLLs." )
    get_filename_component( Mingw_Path ${CMAKE_CXX_COMPILER} PATH )
    set( CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS ${Mingw_Path}/libgcc_s_seh-1.dll ${Mingw_Path}/libstdc++-6.dll ${Mingw_Path}/libwinpthread-1.dll )
endif()

include(InstallRequiredSystemLibraries)
set(CPACK_PACKAGE_VERSION_MAJOR "1")
set(CPACK_PACKAGE_VERSION_MINOR "0")
set(CPACK_PACKAGE_VERSION_PATCH "0")

set(CPACK_SOURCE_GENERATOR "ZIP")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "Libproto")
set(CPACK_PACKAGE_CHECKSUM SHA256)

file(GLOB SOURCES "./*.c" "./*.cpp")
file(GLOB HEADERS "./proto/*.hpp" "./proto/*.h")
add_library(proto SHARED ${SOURCES})
target_compile_definitions(proto PUBLIC MYLIB_EXPORTS)
target_link_libraries(proto uv cryptopp::cryptopp)
target_include_directories(proto PUBLIC "./proto/")
#target_compile_features(proto PUBLIC cxx_std_17 c_std_17)

if(WIN32)
    set(CPACK_GENERATOR "NSIS")
    set(CPACK_NSIS_MODIFY_PATH true)

    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        target_compile_definitions(proto PUBLIC DEBUG)
    endif()

    install(FILES "${libuv_BIN_DIRS_RELEASE}/libuv.dll" DESTINATION bin COMPONENT Runtime CONFIGURATIONS "Release")
    install(TARGETS proto COMPONENT Runtime CONFIGURATIONS "Release" DESTINATION bin)
    install (PROGRAMS ${CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS} DESTINATION bin COMPONENT Runtime CONFIGURATIONS "Release")
    install(FILES ${HEADERS} DESTINATION include COMPONENT Headers)

elseif(LINUX)
    set(CPACK_GENERATOR "DEB")
    set(CPACK_DEBIAN_FILE_NAME "DEB-DEFAULT")
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "acode-pixel")

    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        target_compile_definitions(proto PUBLIC DEBUG)
        message("-- DEBUG MODE ENABLED")
        list(APPEND CPACK_DEBIAN_PACKAGE_PREDEPENDS "libc6, libstdc++6, libuv1-dev, libcrypto++-dev, libproto")
        set(CPACK_DEBIAN_PACKAGE_SECTION "libdevel")
        set(CPACK_PACKAGE_NAME "libproto-dev")
        install(FILES ${HEADERS} DESTINATION include/proto COMPONENT Headers)
    else()
        install(TARGETS proto DESTINATION lib/x86_64-linux-gnu/ NAMELINK_COMPONENT Runtime COMPONENT Runtime)
        list(APPEND CPACK_DEBIAN_PACKAGE_PREDEPENDS "libc6, libstdc++6, libuv1t64")
        set(CPACK_DEBIAN_PACKAGE_SECTION "libs")
        set(CPACK_PACKAGE_NAME "libproto")
    endif()
    set(CPACK_DEBIAN_PACKAGE_DEPENDS ${CPACK_DEBIAN_PACKAGE_PREDEPENDS})
endif()

include(CPack)
cpack_add_component(Runtime DISPLAY_NAME "Runtime Libraries")
cpack_add_component(Headers DISPLAY_NAME "C/C++ Headers")
#install(DIRECTORY ${libuv_INCLUDE_DIR}/uv ${cryptopp_INCLUDE_DIRS}/cryptopp DESTINATION include)
